# *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*
# *  Multi_CLASS input parameter file  *
# *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*

# The spirit of Multi CLASS is that 
# “all the input parameters should be explicitly declared”.
# Some options available in CLASS have been removed, e.g., 
# the possibility to declare the bin width only once, relying on the 
# code to assign it to all the redshift bins. The ultimate goal is to 
# avoid any possible ambiguity, even if the level of conciseness in the 
# .ini file has been reduced.

# ---------------------------------------------
# ----> Computing the density number count Cls:
# ---------------------------------------------

# 'nCl' (or 'dCl') for density number count Cls

output = nCl 


# Determine contributions to the observable number count fluctuation 
# spectrum: matter density ('density'), redshift-space and Doppler 
# distortions ('rsd'), lensing ('lensing'), or gravitational potential 
# terms ('gr'). Put below the list of terms to be included.
# (defaut: if this field is not passed, only 'dens' will be included).

number count contributions = density, rsd, lensing, gr


# Decide whether you want to consider one tracer (e.g., auto-tracer angular 
# power spectrum) or two tracers (cross- tracer angular power spectrum).
# (Default: no).

selection_multitracing = no


# Enter here a description of the selection window functions W(z) of each
# redshift bin; selection_window can be set to 'gaussian', 'tophat' or
# 'dirac', then pass a list of N mean redshifts in growing order
# separated by commas and N widths separated by commas. The width stands 
# for one standard deviation of the gaussian (in z space), or for the 
# half-width of the top-hat. 
# There are no default values for these quantities: they always must be
# specified.
# Note the change of name for selection_window with respect to the 
# standard CLASS (which uses "selection").
# [note: for good performances, the code uses the Limber approximation 
#  for nCl. If you want high precision even with thin selection functions,
#  increase the default value of the precision parameters 
#  l_switch_limber_for_nc_local_over_z, l_switch_limber_for_nc_los_over_z;
#  for instance, add them to the input file with values 10000 and 2000, 
#  instead of the default 100 and 30. Also, check the precision parameters
#  relevant to the nCl computation in include/precision.h and tune them
#  accordingly to your needs.]

selection_window = gaussian
selection_mean = 0.5, 0.51, 0.52
selection_width = 0.2, 0.25, 0.3


# Enter here the description of the tracer(s) used to compute the 
# angular power spectra: bias and magnification. As before, there are
# no default values for these quantities: they always must be specified. 
# For both the bias and magnification bias, the number of values entered
# (separated by commas) must be N_bins * N_tracers, where N_bins is the 
# number of redshift bins used (specified in selection_mean), and 
# N_tracers = 1,2 is the number of tracers used (specified in 
# selection_multitracing). For tracers X and Y, the input should be ordered
# as: b_X(z1),...,b_X(zN_bins),b_Y(z1),...,b_Y(zN_bins) (and analogously 
# for the magnification bias). 

selection_bias = 1.81, 1.81, 1.81
selection_magnification_bias = 0., 0., 0.


# It is possible to multiply the window function W(z) by a selection function
# 'dNdz' (number of objects per redshift interval). You should assign a 
# redshift distribution for each tracer: selection_dNdz_1 and selection_dNdz_2
# determine the number density per redshift interval of tracer 1 and 2.
# The code always reads the selection_dNdz_1 option, whereas the 
# selection_dNdz_2 input is read only if "selection_multitracing = yes".
# You can choose between "analytic" (to select between one of the hardcoded
# cases) or "file" (to read the distribution from an input file). 
# If selection_dNdz_1 is left unspecified in the single-tracer case, 
# the code uses an uniform dN/dz. In the multi-tracer case the user must 
# always specify the [analytic/file] option for both tracers, and it 
# must be the same for both of them (this restriction will be removed
# in future versions of the code). 
# Note that the input option dNdz_selection from the standard CLASS is 
# not supported any more. In this way the user can switch from two 
# tracers to a single one just by using the selection_multitracing option

selection_dNdz_1 = analytic
# selection_dNdz_2 = analytic


# In the case "selection_dNdz_X = analytic", you must choose between the 
# included catalog of hardcoded tracer number density redshift distributions.
# selection_tracer_1 will always be read; if "selection_multitracing = yes", 
# the code will also read selection_tracer_2. The catalog includes 
# redshift distributions corresponding to "euclid_galaxy" (arXiv:1606.00180)
# "spherex_galaxy" (arXiv:1412.4872) and "astrophysical_gws" (arXiv:1809.03528).
# New redshift distributions can be easily added in the "transfer_dNdz_analytic"
# and "transfer_dln_dNdz_dz_analyic" functions in "source/transfer.c" module.

selection_tracer_1 = astrophysical_gws
# selection_tracer_2 = spherex_galaxy


# In the case "selection_dNdz_X = file", you must provide the path to 
# the file(s) containing the redshift distribution of the tracer(s) used.
# The file(s) should contain two columns (z,dN/dz) as in standard CLASS.
# In addition, you must provide a path to the file(s) containing the 
# redshift distribution used to compute the evolution bias parameters
# (in a similar format). selection_X_filepath_1 is always read by the 
# code, while selection_X_filepath_2 is only read if 
# "selection_multitracing = yes".
# Note that the "dNdz_evolution" option from the standard CLASS has been 
# removed. The user can specify the evolution bias either hardcoding its
# value in the "transfer_dln_dNdz_dz_analytic" function in the 
# "source/transfer.c" module, or modifying the dNdz provided in
# selection_dNdzevolution_filepath_X.

# selection_dNdz_filepath_1 = /path/to/your/file1
# selection_dNdz_filepath_2 = /path/to/your/file2
# selection_dNdzevolution_filepath_1 = /path/to/your/file1
# selection_dNdzevolution_filepath_2 = /path/to/your/file2


# Set the number of cross-correlation spectra between redshift bins that
# you want to calculate: 0 means only auto-bin correlation, 1 means only
# adjacent bins, and number of bins minus one means all cross-correlations, 
# similarly to standard CLASS. Note that, if "selection_multitracing = yes",
# the code will compute more cross-tracer correlations than the standard CLASS,
# since for two tracers, Cl(z_a,z_b) != Cl_(z_b,z_a). (default: 0)

non_diagonal = 0


# ---------------------------------------------------
# ----> Primordial non-Gaussianity of the local type:
# ---------------------------------------------------

# Set the amplitude of the non-Gaussian correction of the local type to 
# the Newtonian gravitational potential at the pivot scale in the "LSS" 
# convention. In addition, you can choose the pivot scale (in Mpc^-1) 
# and the tilt of the non-Gaussian correction. (Default: 0.,0.,1.0).

f_NL = 0.
n_NG = 0.
k_pivot_NG = 1.


# -------------------------------------
# ----> define format of final spectra:
# -------------------------------------

# file name root 'root' for all output files (if Cl requested, written to
#     '<root>cl.dat'; if P(k) requested, written to '<root>pk.dat'; plus similar
#     files for scalars, tensors, pairs of initial conditions, etc.; if file with
#     input parameters requested, written to '<root>parameters.ini') (default:
#     the input module sets automatically 'root' to 'output/<thisfilename>N_',
#     where N is the first available integer number, starting from 00, to avoid
#     erasing the output of previous runs)

# root = output/test_





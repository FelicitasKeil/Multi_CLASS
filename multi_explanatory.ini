# *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*
# *  Multi_CLASS input parameter file  *
# *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*

# This example of input file, intended for Multi_CLASS beginners, lists
# all new possibilities and modifications included in Multi_CLASS with
# respect to the standard CLASS. You can use a more concise version, in 
# which only the arguments in which you are interested would appear. 
# Only lines containing an equal sign not preceded by a sharp sign "#" 
# are considered by the code, any other line is considered as a comment.
#
# We refer to the file "explanatory.ini" for the rest of options
# already included in the standard CLASS code (also those related to the
# computation of nCl, but that have not changed in Multi_CLASS).
#
# Input files must have an extension ".ini".

# The spirit of Multi CLASS is that 
# “all the input parameters should be explicitly declared”.
# Some options available in CLASS have been removed, e.g., 
# the possibility to declare the bin width only once, relying on the 
# code to assign it to all the redshift bins. The ultimate goal is to 
# avoid any possible ambiguity, even if the level of conciseness in the 
# .ini file has been reduced.

# ---------------------------------------------
# ----> Computing the density number count Cls:
# ---------------------------------------------

# 'nCl' (or 'dCl') for density number count Cls

output = nCl


# 2.a) if you want an estimate of the non-linear P(k) and Cls, enter
#    'halofit' or 'Halofit' or 'HALOFIT' for Halofit, and
#    'hmcode' or 'Hmcode' or 'HMcode' or 'HMCODE') for HMcode;
#    otherwise leave blank (default: blank, linear P(k) and Cls)

non linear = halofit

evolver = 0

# Determine contributions to the observable number count fluctuation 
# spectrum: matter density ('density'), redshift-space and Doppler 
# distortions ('rsd'), lensing ('lensing'), or gravitational potential 
# terms ('gr'). Put below the list of terms to be included.
# (defaut: if this field is not passed, only 'dens' will be included).

number count contributions = density, rsd, lensing, gr


# Decide whether you want to consider one tracer (e.g., auto-tracer angular 
# power spectrum) or two tracers (cross- tracer angular power spectrum).
# (Default: no).

selection_multitracing = no


# Enter here a description of the selection window functions W(z) of each
# redshift bin; selection_window can be set to 'gaussian', 'tophat' or
# 'dirac', then pass a list of N mean redshifts in growing order
# separated by commas and N widths separated by commas. The width stands 
# for one standard deviation of the gaussian (in z space), or for the 
# half-width of the top-hat. 
# There are no default values for these quantities: they always must be
# specified.
# Note the change of name for selection_window with respect to the 
# standard CLASS (which uses "selection").
# [note: for good performances, the code uses the Limber approximation 
#  for nCl. If you want high precision even with thin selection functions,
#  increase the default value of the precision parameters 
#  l_switch_limber_for_nc_local_over_z, l_switch_limber_for_nc_los_over_z;
#  for instance, add them to the input file with values 10000 and 2000, 
#  instead of the default 100 and 30. Also, check the precision parameters
#  relevant to the nCl computation in include/precision.h and tune them
#  accordingly to your needs.]

# NEW: added selection window dependent on GW frequency "gw_frequency_dep", see arXiv:2206.02747

selection_window = gw_frequency_dep
selection_mean = 1.0
selection_width = 0.19 


# Enter here the description of the tracer(s) used to compute the 
# angular power spectra: bias and magnification. As before, there are
# no default values for these quantities: they always must be specified. 
# For both the bias and magnification bias, the number of values entered
# (separated by commas) must be N_bins * N_tracers, where N_bins is the 
# number of redshift bins used (specified in selection_mean), and 
# N_tracers = 1,2 is the number of tracers used (specified in 
# selection_multitracing). For tracers X and Y, the input should be ordered
# as: b_X(z1),...,b_X(zN_bins),b_Y(z1),...,b_Y(zN_bins) (and analogously 
# for the magnification bias). 

selection_bias = 1.81
selection_magnification_bias = 0.4

#Frequency Dependence of the gravitational waves

gw_frequency = 10

# It is possible to multiply the window function W(z) by a selection function
# 'dNdz' (number of objects per redshift interval). You should assign a 
# redshift distribution for each tracer: selection_dNdz_1 and selection_dNdz_2
# determine the number density per redshift interval of tracer 1 and 2.
# The code always reads the selection_dNdz_1 option, whereas the 
# selection_dNdz_2 input is read only if "selection_multitracing = yes".
# You can choose between "analytic" (to select between one of the hardcoded
# cases) or "file" (to read the distribution from an input file). 
# If selection_dNdz_1 is left unspecified in the single-tracer case, 
# the code uses an uniform dN/dz. In the multi-tracer case the user must 
# always specify the [analytic/file] option for both tracers, and it 
# must be the same for both of them (this restriction will be removed
# in future versions of the code). 
# Note that the input option dNdz_selection from the standard CLASS is 
# not supported any more. In this way the user can switch from two 
# tracers to a single one just by using the selection_multitracing option

selection_dNdz_1 = analytic
# selection_dNdz_2 = analytic


# In the case "selection_dNdz_X = analytic", you must choose between the 
# included catalog of hardcoded tracer number density redshift distributions.
# selection_tracer_1 will always be read; if "selection_multitracing = yes", 
# the code will also read selection_tracer_2. The catalog includes 
# redshift distributions corresponding to "euclid_galaxy" (arXiv:1606.00180)
# "spherex_galaxy" (arXiv:1412.4872) and "astrophysical_gws" (arXiv:1809.03528).
# New redshift distributions can be easily added in the "transfer_dNdz_analytic"
# and "transfer_dln_dNdz_dz_analyic" functions in "source/transfer.c" module.

selection_tracer_1 = astrophysical_gws
# selection_tracer_2 = spherex_galaxy


# In the case "selection_dNdz_X = file", you must provide the path to 
# the file(s) containing the redshift distribution of the tracer(s) used.
# The file(s) should contain two columns (z,dN/dz) as in standard CLASS.
# In addition, you must provide a path to the file(s) containing the 
# redshift distribution used to compute the evolution bias parameters
# (in a similar format). selection_X_filepath_1 is always read by the 
# code, while selection_X_filepath_2 is only read if 
# "selection_multitracing = yes".
# Note that the "dNdz_evolution" option from the standard CLASS has been 
# removed. The user can specify the evolution bias either hardcoding its
# value in the "transfer_dln_dNdz_dz_analytic" function in the 
# "source/transfer.c" module, or modifying the dNdz provided in
# selection_dNdzevolution_filepath_X.

# selection_dNdz_filepath_1 = /path/to/your/file1
# selection_dNdz_filepath_2 = /path/to/your/file2
# selection_dNdzevolution_filepath_1 = /path/to/your/file1
# selection_dNdzevolution_filepath_2 = /path/to/your/file2


# Set the number of cross-correlation spectra between redshift bins that
# you want to calculate: 0 means only auto-bin correlation, 1 means only
# adjacent bins, and number of bins minus one means all cross-correlations, 
# similarly to standard CLASS. Note that, if "selection_multitracing = yes",
# the code will compute more cross-tracer correlations than the standard CLASS,
# since for two tracers, Cl(z_a,z_b) != Cl_(z_b,z_a). (default: 0)

#non_diagonal = 0


# ---------------------------------------------------
# ----> Primordial non-Gaussianity of the local type:
# ---------------------------------------------------

# Set the amplitude of the non-Gaussian correction of the local type to 
# the Newtonian gravitational potential at the pivot scale in the "LSS" 
# convention. In addition, you can choose the pivot scale (in Mpc^-1) 
# and the tilt of the non-Gaussian correction. (Default: 0.,0.,1.0).

f_NL = 0.
n_NG = 0.
k_pivot_NG = 1.

# -------------------------------------
# ----> define format of final spectra:
# -------------------------------------

# 1) maximum l for CLs:
# - 'l_max_scalars' for CMB scalars (temperature, polarization, cmb lensing potential),
# - 'l_max_tensors' for CMB tensors (temperature, polarization)
# - 'l_max_lss'     for Large Scale Structure Cls (density, galaxy lensing potential)
# Reducing 'l_max_lss' with respect to l_max_scalars reduces the execution time significantly
# (default: set 'l_max_scalars' to 2500, 'l_max_tensors' to 500, 'l_max_lss' to 300)

#l_max_scalars = 2500
#l_max_tensors = 500
l_max_lss = 30


# 3) value(s) 'z_pk' of redshift(s) for P(k,z) output file(s); can be ordered
#    arbitrarily, but must be separated by comas (default: set 'z_pk' to 0)

#z_pk = 0.2
#z_pk = 0., 1.2, 3.5

# 4) if the code is interfaced with routines that need to interpolate P(k,z) at
#    various values of (k,z), enter 'z_max_pk', the maximum value of z at which
#    such interpolations are needed. (default: set to maximum value in above
#    'z_pk' input)

z_max_pk = 10.


# 7h) Do you want to have all input/precision parameters which have been read
#     written in file '<root>parameters.ini', and those not written in file
#     '<root>unused_parameters' ? If 'write parameters' set to something
#     containing the letter 'y' or 'Y', file written, otherwise not written
#     (default: not written)

#write parameters = yeap

#root = output/multi_explanatory_fix_

#/**< asymptotic linear sampling step in q
#                               space, in units of \f$ 2\pi/r_a(\tau_rec) \f$
#                               (comoving angular diameter distance to
#                               recombination), very important for CMB */

q_linstep_trans = 15

#/**< initial logarithmic sampling step in q
#                                space, in units of \f$ 2\pi/r_a(\tau_{rec})\f$
#                                (comoving angular diameter distance to
#                                recombination), very important for CMB and LSS */
q_logstep_trans = 2000


# ----------------------------------------------------
# ----> amount of information sent to standard output:
# ----------------------------------------------------

# Increase integer values to make each module more talkative (default: all set to 0)

input_verbose = 1
background_verbose = 1
thermodynamics_verbose = 1
perturbations_verbose = 1
transfer_verbose = 3
primordial_verbose = 1
spectra_verbose = 1
nonlinear_verbose = 1
lensing_verbose = 1
output_verbose = 1